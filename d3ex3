<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SBC 601 LPD Compliance Workshop</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            text-align: center;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }
        
        .header h1 {
            color: #2c3e50;
            font-size: 2.5em;
            margin-bottom: 10px;
        }
        
        .header p {
            color: #7f8c8d;
            font-size: 1.2em;
        }
        
        .scenario-box {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }
        
        .scenario-box h2 {
            color: #e74c3c;
            font-size: 1.8em;
            margin-bottom: 15px;
            border-bottom: 2px solid #e74c3c;
            padding-bottom: 10px;
        }
        
        .tabs {
            display: flex;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            margin-bottom: 20px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
        
        .tab {
            flex: 1;
            padding: 20px;
            background: #ecf0f1;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            font-weight: bold;
            border: none;
        }
        
        .tab.active {
            background: #3498db;
            color: white;
        }
        
        .tab:hover {
            background: #2980b9;
            color: white;
        }
        
        .method-content {
            display: none;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }
        
        .method-content.active {
            display: block;
        }
        
        .step {
            background: #f8f9fa;
            border-left: 4px solid #3498db;
            padding: 20px;
            margin: 20px 0;
            border-radius: 0 10px 10px 0;
        }
        
        .step h3 {
            color: #2c3e50;
            margin-bottom: 10px;
        }
        
        .input-group {
            margin: 15px 0;
        }
        
        .input-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #2c3e50;
        }
        
        .input-group input, .input-group select {
            width: 100%;
            padding: 12px;
            border: 2px solid #bdc3c7;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }
        
        .input-group input:focus, .input-group select:focus {
            outline: none;
            border-color: #3498db;
        }
        
        .space-entry {
            background: #e8f4fd;
            border: 2px solid #3498db;
            border-radius: 10px;
            padding: 20px;
            margin: 15px 0;
        }
        
        .space-row {
            display: grid;
            grid-template-columns: 2fr 1fr 1fr 1fr;
            gap: 15px;
            align-items: end;
            margin-bottom: 15px;
        }
        
        .btn {
            background: #27ae60;
            color: white;
            padding: 12px 25px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: background 0.3s ease;
            margin: 10px 5px;
        }
        
        .btn:hover {
            background: #219a52;
        }
        
        .btn-secondary {
            background: #95a5a6;
        }
        
        .btn-secondary:hover {
            background: #7f8c8d;
        }
        
        .btn-danger {
            background: #e74c3c;
        }
        
        .btn-danger:hover {
            background: #c0392b;
        }
        
        .results {
            background: linear-gradient(135deg, #2ecc71, #27ae60);
            color: white;
            padding: 25px;
            border-radius: 15px;
            margin-top: 20px;
            text-align: center;
        }
        
        .results h3 {
            font-size: 1.5em;
            margin-bottom: 15px;
        }
        
        .results-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .result-item {
            background: rgba(255, 255, 255, 0.2);
            padding: 15px;
            border-radius: 10px;
        }
        
        .reference-box {
            background: #f39c12;
            color: white;
            padding: 20px;
            border-radius: 10px;
            margin-top: 20px;
        }
        
        .reference-box h4 {
            margin-bottom: 10px;
        }
        
        .quiz-section {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 30px;
            margin-top: 30px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }
        
        .quiz-question {
            background: #e8f6f3;
            border-left: 4px solid #1abc9c;
            padding: 20px;
            margin: 20px 0;
            border-radius: 0 10px 10px 0;
        }
        
        .quiz-options {
            margin: 15px 0;
        }
        
        .quiz-options label {
            display: block;
            padding: 10px;
            margin: 5px 0;
            background: white;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s ease;
        }
        
        .quiz-options label:hover {
            background: #ecf0f1;
        }
        
        .quiz-options input[type="radio"] {
            margin-right: 10px;
        }
        
        .feedback {
            padding: 15px;
            border-radius: 8px;
            margin: 10px 0;
            font-weight: bold;
        }
        
        .feedback.correct {
            background: #d5f4e6;
            color: #27ae60;
            border: 2px solid #27ae60;
        }
        
        .feedback.incorrect {
            background: #fadbd8;
            color: #e74c3c;
            border: 2px solid #e74c3c;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üè¢ SBC 601 LPD Compliance Workshop</h1>
            <p>Interactive Training: Saudi Office Complex Lighting Power Density Calculations</p>
        </div>
        
        <div class="scenario-box">
            <h2>üìã Project Scenario</h2>
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px;">
                <div>
                    <h3>üè¢ Building Details</h3>
                    <ul style="margin-left: 20px; line-height: 1.6;">
                        <li><strong>Total Area:</strong> 5,000 m¬≤</li>
                        <li><strong>Building Type:</strong> Office Complex</li>
                        <li><strong>Location:</strong> Saudi Arabia</li>
                        <li><strong>Code:</strong> SBC 601</li>
                    </ul>
                </div>
                <div>
                    <h3>üè† Mixed-Use Spaces</h3>
                    <ul style="margin-left: 20px; line-height: 1.6;">
                        <li>Open plan offices</li>
                        <li>Enclosed offices</li>
                        <li>Conference rooms</li>
                        <li>Corridors</li>
                        <li>Lobby areas</li>
                    </ul>
                </div>
                <div>
                    <h3>üìñ SBC 601 References</h3>
                    <ul style="margin-left: 20px; line-height: 1.6;">
                        <li>Section 9.5.1: Building Area Method</li>
                        <li>Section 9.6.1: Space-by-Space Method</li>
                        <li>Table 9.2: Building Area LPD</li>
                        <li>Table 9.3: Space-by-Space LPD</li>
                    </ul>
                </div>
            </div>
        </div>
        
        <div class="tabs">
            <button class="tab active" onclick="showMethod('building-area')">üè¢ Building Area Method</button>
            <button class="tab" onclick="showMethod('space-by-space')">üè† Space-by-Space Method</button>
            <button class="tab" onclick="showMethod('quiz')">üìù Knowledge Check</button>
        </div>
        
        <!-- Building Area Method -->
        <div id="building-area" class="method-content active">
            <h2 style="color: #2c3e50; margin-bottom: 20px;">üè¢ Building Area Method (4 Steps)</h2>
            
            <div class="step">
                <h3>Step 1: Determine Building Type & LPD</h3>
                <p>From SBC 601 Table 9.2, find the appropriate building area type and its LPD value.</p>
                <div class="input-group">
                    <label for="building-type">Select Building Type:</label>
                    <select id="building-type" onchange="updateBuildingLPD()">
                        <option value="">Select building type...</option>
                        <option value="office|9.7">Office - 9.7 W/m¬≤</option>
                        <option value="hospital|13.0">Hospital - 13.0 W/m¬≤</option>
                        <option value="retail|15.1">Retail - 15.1 W/m¬≤</option>
                        <option value="warehouse|7.1">Warehouse - 7.1 W/m¬≤</option>
                        <option value="school|10.7">School/University - 10.7 W/m¬≤</option>
                    </select>
                </div>
                <div class="input-group">
                    <label for="building-lpd">LPD Value (W/m¬≤):</label>
                    <input type="number" id="building-lpd" step="0.1" readonly>
                </div>
            </div>
            
            <div class="step">
                <h3>Step 2: Calculate Gross Lighted Floor Area</h3>
                <p>Determine the total gross lighted floor area of the building.</p>
                <div class="input-group">
                    <label for="gross-area">Gross Lighted Floor Area (m¬≤):</label>
                    <input type="number" id="gross-area" value="5000" onchange="calculateBuildingMethod()">
                </div>
            </div>
            
            <div class="step">
                <h3>Step 3: Multiply Area √ó LPD</h3>
                <p>Calculate the lighting power allowance by multiplying the area by the LPD.</p>
                <div class="input-group">
                    <label for="building-calculation">Calculation:</label>
                    <input type="text" id="building-calculation" readonly>
                </div>
            </div>
            
            <div class="step">
                <h3>Step 4: Total Building Allowance</h3>
                <p>Sum all building area type allowances (for single building type, this equals Step 3).</p>
                <button class="btn" onclick="calculateBuildingMethod()">Calculate Total Allowance</button>
            </div>
            
            <div id="building-results" class="results" style="display: none;">
                <h3>üéØ Building Area Method Results</h3>
                <div class="results-grid">
                    <div class="result-item">
                        <h4>Building Type</h4>
                        <span id="result-building-type">-</span>
                    </div>
                    <div class="result-item">
                        <h4>Total Area</h4>
                        <span id="result-gross-area">-</span>
                    </div>
                    <div class="result-item">
                        <h4>LPD</h4>
                        <span id="result-lpd">-</span>
                    </div>
                    <div class="result-item">
                        <h4>Total Allowance</h4>
                        <span id="result-total-allowance">-</span>
                    </div>
                </div>
                
                <div class="reference-box">
                    <h4>üìñ SBC 601 Reference</h4>
                    <p>Section 9.5.1: Building Area Method - Trade-offs among building area types are permitted provided that the total installed interior lighting power does not exceed the interior lighting power allowance.</p>
                </div>
            </div>
        </div>
        
        <!-- Space-by-Space Method -->
        <div id="space-by-space" class="method-content">
            <h2 style="color: #2c3e50; margin-bottom: 20px;">üè† Space-by-Space Method (4 Steps)</h2>
            
            <div class="step">
                <h3>Step 1: Identify Space Types</h3>
                <p>From SBC 601 Table 9.3, identify each space type and its corresponding LPD.</p>
                <div id="spaces-container">
                    <!-- Dynamic space entries will be added here -->
                </div>
                <button class="btn" onclick="addSpace()">+ Add Space</button>
                <button class="btn btn-secondary" onclick="loadExampleSpaces()">Load Example Spaces</button>
            </div>
            
            <div class="step">
                <h3>Step 2: Calculate Area Limits</h3>
                <p>Calculate area limits by centerline of walls to exterior surfaces.</p>
                <p style="color: #7f8c8d; font-style: italic;">Areas are calculated from centerline of interior walls and outside surface of exterior walls.</p>
            </div>
            
            <div class="step">
                <h3>Step 3: Multiply Each Space Area √ó LPD</h3>
                <p>Calculate the lighting power allowance for each individual space.</p>
                <button class="btn" onclick="calculateSpaceMethod()">Calculate Space Allowances</button>
            </div>
            
            <div class="step">
                <h3>Step 4: Sum All Space Allowances</h3>
                <p>Add up all individual space allowances to get the total building allowance.</p>
            </div>
            
            <div id="space-results" class="results" style="display: none;">
                <h3>üéØ Space-by-Space Method Results</h3>
                <div id="space-results-content">
                    <!-- Results will be populated here -->
                </div>
                
                <div class="reference-box">
                    <h4>üìñ SBC 601 Reference</h4>
                    <p>Section 9.6.1: Space-by-Space Method - Trade-offs among spaces and subspaces are permitted provided that the total installed interior lighting power does not exceed the interior lighting power allowance.</p>
                </div>
            </div>
        </div>
        
        <!-- Quiz Section -->
        <div id="quiz" class="method-content">
            <h2 style="color: #2c3e50; margin-bottom: 20px;">üìù Knowledge Check Quiz</h2>
            
            <div class="quiz-question">
                <h3>Question 1: What is the LPD for Office buildings using the Building Area Method?</h3>
                <div class="quiz-options">
                    <label><input type="radio" name="q1" value="a"> 8.8 W/m¬≤</label>
                    <label><input type="radio" name="q1" value="b"> 9.7 W/m¬≤</label>
                    <label><input type="radio" name="q1" value="c"> 10.7 W/m¬≤</label>
                    <label><input type="radio" name="q1" value="d"> 11.3 W/m¬≤</label>
                </div>
                <div id="feedback1" class="feedback" style="display: none;"></div>
            </div>
            
            <div class="quiz-question">
                <h3>Question 2: In the Space-by-Space method, what is the LPD for Open Office spaces?</h3>
                <div class="quiz-options">
                    <label><input type="radio" name="q2" value="a"> 9.7 W/m¬≤</label>
                    <label><input type="radio" name="q2" value="b"> 10.5 W/m¬≤</label>
                    <label><input type="radio" name="q2" value="c"> 11.9 W/m¬≤</label>
                    <label><input type="radio" name="q2" value="d"> 12.6 W/m¬≤</label>
                </div>
                <div id="feedback2" class="feedback" style="display: none;"></div>
            </div>
            
            <div class="quiz-question">
                <h3>Question 3: For a 5,000 m¬≤ office building, what is the total lighting power allowance using the Building Area Method?</h3>
                <div class="quiz-options">
                    <label><input type="radio" name="q3" value="a"> 44,000 W</label>
                    <label><input type="radio" name="q3" value="b"> 48,500 W</label>
                    <label><input type="radio" name="q3" value="c"> 52,500 W</label>
                    <label><input type="radio" name="q3" value="d"> 56,500 W</label>
                </div>
                <div id="feedback3" class="feedback" style="display: none;"></div>
            </div>
            
            <div class="quiz-question">
                <h3>Question 4: Which SBC 601 sections cover the two compliance methods?</h3>
                <div class="quiz-options">
                    <label><input type="radio" name="q4" value="a"> 9.4.1 and 9.5.1</label>
                    <label><input type="radio" name="q4" value="b"> 9.5.1 and 9.6.1</label>
                    <label><input type="radio" name="q4" value="c"> 9.3.1 and 9.4.1</label>
                    <label><input type="radio" name="q4" value="d"> 9.6.1 and 9.7.1</label>
                </div>
                <div id="feedback4" class="feedback" style="display: none;"></div>
            </div>
            
            <button class="btn" onclick="checkQuizAnswers()">Check All Answers</button>
            <button class="btn btn-secondary" onclick="resetQuiz()">Reset Quiz</button>
            
            <div id="quiz-score" style="margin-top: 20px; text-align: center; font-size: 1.2em; font-weight: bold;"></div>
        </div>
    </div>
    
    <script>
        // Space type data from SBC 601 Table 9.3
        const spaceTypes = {
            'open-office': { name: 'Open Office', lpd: 10.5 },
            'enclosed-office': { name: 'Enclosed Office', lpd: 11.9 },
            'conference-room': { name: 'Conference Room', lpd: 12.6 },
            'corridor': { name: 'Corridor', lpd: 4.4 },
            'lobby': { name: 'Lobby - All Other', lpd: 13.99 },
            'restroom': { name: 'Restroom', lpd: 8.0 },
            'storage': { name: 'Storage Room', lpd: 3.8 },
            'break-room': { name: 'Lounge/Breakroom', lpd: 12.92 }
        };
        
        let spaceCounter = 0;
        
        function showMethod(methodId) {
            // Hide all method contents
            document.querySelectorAll('.method-content').forEach(el => {
                el.classList.remove('active');
            });
            
            // Remove active class from all tabs
            document.querySelectorAll('.tab').forEach(el => {
                el.classList.remove('active');
            });
            
            // Show selected method
            document.getElementById(methodId).classList.add('active');
            
            // Add active class to clicked tab
            event.target.classList.add('active');
        }
        
        function updateBuildingLPD() {
            const select = document.getElementById('building-type');
            const [type, lpd] = select.value.split('|');
            document.getElementById('building-lpd').value = lpd || '';
            calculateBuildingMethod();
        }
        
        function calculateBuildingMethod() {
            const lpd = parseFloat(document.getElementById('building-lpd').value);
            const area = parseFloat(document.getElementById('gross-area').value);
            
            if (lpd && area) {
                const total = lpd * area;
                document.getElementById('building-calculation').value = `${area} m¬≤ √ó ${lpd} W/m¬≤ = ${total.toLocaleString()} W`;
                
                // Show results
                const resultsDiv = document.getElementById('building-results');
                resultsDiv.style.display = 'block';
                
                const buildingType = document.getElementById('building-type').selectedOptions[0].text;
                document.getElementById('result-building-type').textContent = buildingType;
                document.getElementById('result-gross-area').textContent = `${area.toLocaleString()} m¬≤`;
                document.getElementById('result-lpd').textContent = `${lpd} W/m¬≤`;
                document.getElementById('result-total-allowance').textContent = `${total.toLocaleString()} W`;
            }
        }
        
        function addSpace() {
            spaceCounter++;
            const container = document.getElementById('spaces-container');
            const spaceDiv = document.createElement('div');
            spaceDiv.className = 'space-entry';
            spaceDiv.id = `space-${spaceCounter}`;
            
            spaceDiv.innerHTML = `
                <div class="space-row">
                    <div class="input-group">
                        <label>Space Type:</label>
                        <select onchange="updateSpaceLPD(${spaceCounter})">
                            <option value="">Select space type...</option>
                            ${Object.entries(spaceTypes).map(([key, data]) => 
                                `<option value="${key}">${data.name} - ${data.lpd} W/m¬≤</option>`
                            ).join('')}
                        </select>
                    </div>
                    <div class="input-group">
                        <label>Area (m¬≤):</label>
                        <input type="number" step="0.1" onchange="calculateSpaceAllowance(${spaceCounter})">
                    </div>
                    <div class="input-group">
                        <label>LPD (W/m¬≤):</label>
                        <input type="number" step="0.1" readonly>
                    </div>
                    <div>
                        <button class="btn btn-danger" onclick="removeSpace(${spaceCounter})">Remove</button>
                    </div>
                </div>
                <div class="input-group">
                    <label>Space Allowance (W):</label>
                    <input type="text" readonly>
                </div>
            `;
            
            container.appendChild(spaceDiv);
        }
        
        function removeSpace(spaceId) {
            document.getElementById(`space-${spaceId}`).remove();
        }
        
        function updateSpaceLPD(spaceId) {
            const spaceDiv = document.getElementById(`space-${spaceId}`);
            const select = spaceDiv.querySelector('select');
            const lpdInput = spaceDiv.querySelectorAll('input')[1];
            
            if (select.value) {
                lpdInput.value = spaceTypes[select.value].lpd;
                calculateSpaceAllowance(spaceId);
            }
        }
        
        function calculateSpaceAllowance(spaceId) {
            const spaceDiv = document.getElementById(`space-${spaceId}`);
            const inputs = spaceDiv.querySelectorAll('input');
            const area = parseFloat(inputs[0].value);
            const lpd = parseFloat(inputs[1].value);
            const allowanceInput = inputs[2];
            
            if (area && lpd) {
                const allowance = area * lpd;
                allowanceInput.value = `${allowance.toFixed(1)} W (${area} √ó ${lpd})`;
            }
        }
        
        function loadExampleSpaces() {
            // Clear existing spaces
            document.getElementById('spaces-container').innerHTML = '';
            spaceCounter = 0;
            
            // Add example spaces
            const examples = [
                { type: 'open-office', area: 2000 },
                { type: 'enclosed-office', area: 800 },
                { type: 'conference-room', area: 300 },
                { type: 'corridor', area: 600 },
                { type: 'lobby', area: 200 },
                { type: 'restroom', area: 100 }
            ];
            
            examples.forEach(example => {
                addSpace();
                const spaceDiv = document.getElementById(`space-${spaceCounter}`);
                const select = spaceDiv.querySelector('select');
                const areaInput = spaceDiv.querySelectorAll('input')[0];
                
                select.value = example.type;
                areaInput.value = example.area;
                updateSpaceLPD(spaceCounter);
            });
        }
        
        function calculateSpaceMethod() {
            const spaces = document.querySelectorAll('.space-entry');
            let totalAllowance = 0;
            let totalArea = 0;
            const results = [];
            
            spaces.forEach(space => {
                const select = space.querySelector('select');
                const inputs = space.querySelectorAll('input');
                const area = parseFloat(inputs[0].value);
                const lpd = parseFloat(inputs[1].value);
                
                if (select.value && area && lpd) {
                    const allowance = area * lpd;
                    totalAllowance += allowance;
                    totalArea += area;
                    
                    results.push({
                        type: spaceTypes[select.value].name,
                        area: area,
                        lpd: lpd,
                        allowance: allowance
                    });
                }
            });
            
            if (results.length > 0) {
                displaySpaceResults(results, totalAllowance, totalArea);
            }
        }
        
        function displaySpaceResults(results, totalAllowance, totalArea) {
            const resultsDiv = document.getElementById('space-results');
            const contentDiv = document.getElementById('space-results-content');
            
            let html = `
                <div class="results-grid">
                    <div class="result-item">
                        <h4>Total Spaces</h4>
                        <span>${results.length}</span>
                    </div>
                    <div class="result-item">
                        <h4>Total Area</h4>
                        <span>${totalArea.toLocaleString()} m¬≤</span>
                    </div>
                    <div class="result-item">
                        <h4>Average LPD</h4>
                        <span>${(totalAllowance / totalArea).toFixed(2)} W/m¬≤</span>
                    </div>
                    <div class="result-item">
                        <h4>Total Allowance</h4>
                        <span>${totalAllowance.toLocaleString()} W</span>
                    </div>
                </div>
                
                <h4 style="margin-top: 20px;">Space Breakdown:</h4>
                <div style="overflow-x: auto; margin-top: 15px;">
                    <table style="width: 100%; border-collapse: collapse; background: rgba(255,255,255,0.9); border-radius: 8px; overflow: hidden;">
                        <thead>
                            <tr style="background: rgba(0,0,0,0.1);">
                                <th style="padding: 12px; text-align: left;">Space Type</th>
                                <th style="padding: 12px; text-align: right;">Area (m¬≤)</th>
                                <th style="padding: 12px; text-align: right;">LPD (W/m¬≤)</th>
                                <th style="padding: 12px; text-align: right;">Allowance (W)</th>
                            </tr>
                        </thead>
                        <tbody>
            `;
            
            results.forEach(result => {
                html += `
                    <tr style="border-bottom: 1px solid rgba(0,0,0,0.1);">
                        <td style="padding: 10px;">${result.type}</td>
                        <td style="padding: 10px; text-align: right;">${result.area.toLocaleString()}</td>
                        <td style="padding: 10px; text-align: right;">${result.lpd}</td>
                        <td style="padding: 10px; text-align: right; font-weight: bold;">${result.allowance.toLocaleString()}</td>
                    </tr>
                `;
            });
            
            html += `
                        </tbody>
                    </table>
                </div>
            `;
            
            contentDiv.innerHTML = html;
            resultsDiv.style.display = 'block';
        }
        
        function checkQuizAnswers() {
            const answers = {
                q1: { correct: 'b', explanation: 'According to SBC 601 Table 9.2, Office buildings have an LPD of 9.7 W/m¬≤.' },
                q2: { correct: 'b', explanation: 'According to SBC 601 Table 9.3, Open Office spaces have an LPD of 10.5 W/m¬≤.' },
                q3: { correct: 'b', explanation: '5,000 m¬≤ √ó 9.7 W/m¬≤ = 48,500 W total lighting power allowance.' },
                q4: { correct: 'b', explanation: 'Section 9.5.1 covers Building Area Method and Section 9.6.1 covers Space-by-Space Method.' }
            };
            
            let score = 0;
            
            Object.entries(answers).forEach(([question, data]) => {
                const selectedAnswer = document.querySelector(`input[name="${question}"]:checked`);
                const feedbackDiv = document.getElementById(`feedback${question.slice(1)}`);
                
                if (selectedAnswer) {
                    if (selectedAnswer.value === data.correct) {
                        feedbackDiv.className = 'feedback correct';
                        feedbackDiv.textContent = `‚úÖ Correct! ${data.explanation}`;
                        score++;
                    } else {
                        feedbackDiv.className = 'feedback incorrect';
                        feedbackDiv.textContent = `‚ùå Incorrect. ${data.explanation}`;
                    }
                } else {
                    feedbackDiv.className = 'feedback incorrect';
                    feedbackDiv.textContent = `‚ùå Please select an answer. ${data.explanation}`;
                }
                
                feedbackDiv.style.display = 'block';
            });
            
            const scoreDiv = document.getElementById('quiz-score');
            const percentage = (score / 4) * 100;
            scoreDiv.innerHTML = `
                <div style="background: ${percentage >= 70 ? '#27ae60' : '#e74c3c'}; color: white; padding: 20px; border-radius: 10px;">
                    Quiz Score: ${score}/4 (${percentage}%)
                    ${percentage >= 70 ? 'üéâ Well done!' : 'üìö Review the material and try again!'}
                </div>
            `;
        }
        
        function resetQuiz() {
            document.querySelectorAll('input[type="radio"]').forEach(input => {
                input.checked = false;
            });
            
            document.querySelectorAll('.feedback').forEach(feedback => {
                feedback.style.display = 'none';
            });
            
            document.getElementById('quiz-score').innerHTML = '';
        }
        
        // Initialize with first space
        window.onload = function() {
            addSpace();
        };
    </script>
</body>
</html>
